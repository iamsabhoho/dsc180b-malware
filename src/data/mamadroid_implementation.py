import numpy as np
import regex as re

import os


# getting to utils
import sys,inspect
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0,parentdir)
import utils



def get_package_family(kind, api):
    """
    gets a package or family from api
    
    kind --> string, FAMILY or PACKAGE
    api --> string of the api
    """
    if type(api) == str:
        pattern = "L.*;\s" # pattern for the class
        found = re.findall(pattern, api)
        if len(found) > 0:
            return found[0]
        else:
            return ""
    else:
        return api

def edge_processing(edge):
    """
    performs get_package_family on an edge
    edge --> a list that is an edge
    """
    new_edge = []
    for edg in edge:
        new_edge.append(get_package_family("FAMILY", edg))
    return new_edge





def get_infos(user):
    """
    getting some useful filepaths and stuff
    """
    
    # get project directory 
    PROJECTDIR = os.path.dirname(parentdir)
    
    
    #### FILEPATHS ####
    # target 
    target = utils.get_to_directory(user, ["DSC180A_FA20_A00", "a04malware", "personal-group03", "benign_graphs"])


    # malwares (they're already graph format)
    malware_directory = utils.get_to_directory(user, ["DSC180A_FA20_A00", "a04malware", "apks", "malware"])

    # benigns
    benign1_directory = utils.get_to_directory(user, ["DSC180A_FA20_A00", "a04malware", "apks", "popular_apks"])
    benign2_directory = utils.get_to_directory(user, ["DSC180A_FA20_A00", "a04malware", "apks", "random-apps"])


    malware_apks = [os.path.join(malware_directory, fp) for fp in os.listdir(malware_directory)]
    benign1_apks = [os.path.join(benign1_directory, fp) for fp in os.listdir(benign1_directory)]
    benign2_apks = [os.path.join(benign2_directory, fp) for fp in os.listdir(benign2_directory)]
    
    return [target, malware_directory, benign1_directory, benign2_directory, malware_apks, benign1_apks, benign2_apks]
    
    

