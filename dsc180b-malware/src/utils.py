import os
import re
import glob
import numpy as np

from concurrent.futures import ThreadPoolExecutor



# get paths to smali files
def get_path(app):
    paths = []

    for root, dirs, files in os.walk(app, topdown=False):
        for name in files:
            path = os.path.join(root, name)
            if ".smali" in path:
                paths.append(path)
    return paths

# get directory name w/in the directory
def get_dir_name(fp):
    dir_names = glob.glob(fp)
    return dir_names

# get txt of smali files
def get_txt(fp):
    file = open(fp, 'r')
    txt = file.read()
    return txt
    
# returns a list of all txt files for 1 app   
def app_smali_to_txt(app_smali_fp):
    # get all txt files given 
    txt_lst = []
    for i in app_smali_fp:
        txt = get_txt(i)
        txt_lst.append(txt)
    return txt_lst


def all_txt_dir(dir_lst):
    # get all smali files given a directory
    fp_lst = []
    for i in dir_lst:
        app_smali_fp = get_path(i)
        fp_lst.append(app_smali_fp)

    all_txt = []
    for i in fp_lst:
        # returns a list of txt of an app
        lst = app_smali_to_txt(i)
        all_txt.append(lst)
    
    return all_txt


# A
def A(txt):
    # get any invokes
    invoke = '(invoke)(.*?)(;)'
    apis = re.findall(invoke, txt)
    api_lst = []

    ### get api ###
    for i in apis:
        api = i[1].split("L")[-1]
        api_lst.append(api)

    ### get family ###
    family_lst = []
    for i in api_lst:
        family = i.split("/")[0][1:]
        family_lst.append(family)

    ### get invoke types ###
    invoke_lst = []
    for i in apis:
        invoke_type = i[1].split(" ")[0][1:]
        invoke_lst.append(invoke_type)
        
    # for distinct returns 
    return set(api_lst), set(family_lst), set(invoke_lst)
